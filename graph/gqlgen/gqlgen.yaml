schema:
  - api/graphql/ent.graphql
  - api/graphql/types.graphql
  - api/graphql/query.graphql
  - api/graphql/mutation.graphql

# Where should the generated server code go?
exec:
  layout: follow-schema
  dir: graph/generated
  package: generated

# Where should any generated models go?
model:
  filename: graph/model/models_gen.go
  package: model

# resolver reports where the resolver implementations go.
resolver:
  layout: follow-schema
  dir: graph
  package: graph

# Optional: set to skip running `go mod tidy` when generating server code
skip_mod_tidy: true

# gqlgen will search for any type names in the schema in the generated
# ent package. If they match it will use them, otherwise it will new ones.
autobind:
  - github.com/woocoos/workflow/ent

models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.IntID
  GID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
  Node:
    model:
      # ent.Noder is the new interface generated by the Node template.
      - github.com/woocoos/workflow/ent.Noder
  WorkflowRun:
    model:
      - github.com/woocoos/workflow/graph/entgen/types.WorkflowRun
  WorkflowRunInput:
    model:
      - github.com/woocoos/workflow/graph/entgen/types.WorkflowRun
directives:
  constraint:
    skip_runtime: true