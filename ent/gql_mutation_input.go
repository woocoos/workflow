// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/woocoos/workflow/ent/identitylink"
)

// UpdateDeploymentInput represents a mutation input for updating deployments.
type UpdateDeploymentInput struct {
	ClearName            bool
	Name                 *string
	ClearSource          bool
	Source               *string
	ClearProcDefs        bool
	AddProcDefIDs        []int
	RemoveProcDefIDs     []int
	ClearDecisionReqs    bool
	AddDecisionReqIDs    []int
	RemoveDecisionReqIDs []int
}

// Mutate applies the UpdateDeploymentInput on the DeploymentMutation builder.
func (i *UpdateDeploymentInput) Mutate(m *DeploymentMutation) {
	if i.ClearName {
		m.ClearName()
	}
	if v := i.Name; v != nil {
		m.SetName(*v)
	}
	if i.ClearSource {
		m.ClearSource()
	}
	if v := i.Source; v != nil {
		m.SetSource(*v)
	}
	if i.ClearProcDefs {
		m.ClearProcDefs()
	}
	if v := i.AddProcDefIDs; len(v) > 0 {
		m.AddProcDefIDs(v...)
	}
	if v := i.RemoveProcDefIDs; len(v) > 0 {
		m.RemoveProcDefIDs(v...)
	}
	if i.ClearDecisionReqs {
		m.ClearDecisionReqs()
	}
	if v := i.AddDecisionReqIDs; len(v) > 0 {
		m.AddDecisionReqIDs(v...)
	}
	if v := i.RemoveDecisionReqIDs; len(v) > 0 {
		m.RemoveDecisionReqIDs(v...)
	}
}

// SetInput applies the change-set in the UpdateDeploymentInput on the DeploymentUpdate builder.
func (c *DeploymentUpdate) SetInput(i UpdateDeploymentInput) *DeploymentUpdate {
	i.Mutate(c.Mutation())
	return c
}

// SetInput applies the change-set in the UpdateDeploymentInput on the DeploymentUpdateOne builder.
func (c *DeploymentUpdateOne) SetInput(i UpdateDeploymentInput) *DeploymentUpdateOne {
	i.Mutate(c.Mutation())
	return c
}

// CreateDeploymentInput represents a mutation input for creating deployments.
type CreateDeploymentInput struct {
	ID             *int
	OrgID          int
	AppID          int
	Name           *string
	Source         *string
	DeployTime     *time.Time
	ProcDefIDs     []int
	DecisionReqIDs []int
}

// Mutate applies the CreateDeploymentInput on the DeploymentMutation builder.
func (i *CreateDeploymentInput) Mutate(m *DeploymentMutation) {
	m.SetOrgID(i.OrgID)
	m.SetAppID(i.AppID)
	if v := i.Name; v != nil {
		m.SetName(*v)
	}
	if v := i.Source; v != nil {
		m.SetSource(*v)
	}
	if v := i.DeployTime; v != nil {
		m.SetDeployTime(*v)
	}
	if v := i.ProcDefIDs; len(v) > 0 {
		m.AddProcDefIDs(v...)
	}
	if v := i.DecisionReqIDs; len(v) > 0 {
		m.AddDecisionReqIDs(v...)
	}
}

// SetInput applies the change-set in the CreateDeploymentInput on the DeploymentCreate builder.
func (c *DeploymentCreate) SetInput(i CreateDeploymentInput) *DeploymentCreate {
	i.Mutate(c.Mutation())
	return c
}

// CreateIdentityLinkInput represents a mutation input for creating identitylinks.
type CreateIdentityLinkInput struct {
	ID            *int
	ProcDefID     int
	GroupID       *int
	UserID        *int
	AssignerID    *int
	LinkType      identitylink.LinkType
	OrgID         int
	OperationType identitylink.OperationType
	Comments      *string
	TaskID        int
}

// Mutate applies the CreateIdentityLinkInput on the IdentityLinkMutation builder.
func (i *CreateIdentityLinkInput) Mutate(m *IdentityLinkMutation) {
	m.SetProcDefID(i.ProcDefID)
	if v := i.GroupID; v != nil {
		m.SetGroupID(*v)
	}
	if v := i.UserID; v != nil {
		m.SetUserID(*v)
	}
	if v := i.AssignerID; v != nil {
		m.SetAssignerID(*v)
	}
	m.SetLinkType(i.LinkType)
	m.SetOrgID(i.OrgID)
	m.SetOperationType(i.OperationType)
	if v := i.Comments; v != nil {
		m.SetComments(*v)
	}
	m.SetTaskID(i.TaskID)
}

// SetInput applies the change-set in the CreateIdentityLinkInput on the IdentityLinkCreate builder.
func (c *IdentityLinkCreate) SetInput(i CreateIdentityLinkInput) *IdentityLinkCreate {
	i.Mutate(c.Mutation())
	return c
}

// UpdateIdentityLinkInput represents a mutation input for updating identitylinks.
type UpdateIdentityLinkInput struct {
	ClearGroupID    bool
	GroupID         *int
	ClearUserID     bool
	UserID          *int
	ClearAssignerID bool
	AssignerID      *int
	LinkType        *identitylink.LinkType
	OperationType   *identitylink.OperationType
	ClearComments   bool
	Comments        *string
	ClearTask       bool
	TaskID          *int
}

// Mutate applies the UpdateIdentityLinkInput on the IdentityLinkMutation builder.
func (i *UpdateIdentityLinkInput) Mutate(m *IdentityLinkMutation) {
	if i.ClearGroupID {
		m.ClearGroupID()
	}
	if v := i.GroupID; v != nil {
		m.SetGroupID(*v)
	}
	if i.ClearUserID {
		m.ClearUserID()
	}
	if v := i.UserID; v != nil {
		m.SetUserID(*v)
	}
	if i.ClearAssignerID {
		m.ClearAssignerID()
	}
	if v := i.AssignerID; v != nil {
		m.SetAssignerID(*v)
	}
	if v := i.LinkType; v != nil {
		m.SetLinkType(*v)
	}
	if v := i.OperationType; v != nil {
		m.SetOperationType(*v)
	}
	if i.ClearComments {
		m.ClearComments()
	}
	if v := i.Comments; v != nil {
		m.SetComments(*v)
	}
	if i.ClearTask {
		m.ClearTask()
	}
	if v := i.TaskID; v != nil {
		m.SetTaskID(*v)
	}
}

// SetInput applies the change-set in the UpdateIdentityLinkInput on the IdentityLinkUpdate builder.
func (c *IdentityLinkUpdate) SetInput(i UpdateIdentityLinkInput) *IdentityLinkUpdate {
	i.Mutate(c.Mutation())
	return c
}

// SetInput applies the change-set in the UpdateIdentityLinkInput on the IdentityLinkUpdateOne builder.
func (c *IdentityLinkUpdateOne) SetInput(i UpdateIdentityLinkInput) *IdentityLinkUpdateOne {
	i.Mutate(c.Mutation())
	return c
}
