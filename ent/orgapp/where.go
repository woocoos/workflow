// Code generated by ent, DO NOT EDIT.

package orgapp

import (
	"entgo.io/ent/dialect/sql"
	"github.com/woocoos/workflow/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldLTE(FieldID, id))
}

// OrgID applies equality check predicate on the "org_id" field. It's identical to OrgIDEQ.
func OrgID(v int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldEQ(FieldOrgID, v))
}

// AppID applies equality check predicate on the "app_id" field. It's identical to AppIDEQ.
func AppID(v int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldEQ(FieldAppID, v))
}

// OrgIDEQ applies the EQ predicate on the "org_id" field.
func OrgIDEQ(v int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldEQ(FieldOrgID, v))
}

// OrgIDNEQ applies the NEQ predicate on the "org_id" field.
func OrgIDNEQ(v int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldNEQ(FieldOrgID, v))
}

// OrgIDIn applies the In predicate on the "org_id" field.
func OrgIDIn(vs ...int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldIn(FieldOrgID, vs...))
}

// OrgIDNotIn applies the NotIn predicate on the "org_id" field.
func OrgIDNotIn(vs ...int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldNotIn(FieldOrgID, vs...))
}

// OrgIDGT applies the GT predicate on the "org_id" field.
func OrgIDGT(v int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldGT(FieldOrgID, v))
}

// OrgIDGTE applies the GTE predicate on the "org_id" field.
func OrgIDGTE(v int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldGTE(FieldOrgID, v))
}

// OrgIDLT applies the LT predicate on the "org_id" field.
func OrgIDLT(v int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldLT(FieldOrgID, v))
}

// OrgIDLTE applies the LTE predicate on the "org_id" field.
func OrgIDLTE(v int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldLTE(FieldOrgID, v))
}

// AppIDEQ applies the EQ predicate on the "app_id" field.
func AppIDEQ(v int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldEQ(FieldAppID, v))
}

// AppIDNEQ applies the NEQ predicate on the "app_id" field.
func AppIDNEQ(v int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldNEQ(FieldAppID, v))
}

// AppIDIn applies the In predicate on the "app_id" field.
func AppIDIn(vs ...int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldIn(FieldAppID, vs...))
}

// AppIDNotIn applies the NotIn predicate on the "app_id" field.
func AppIDNotIn(vs ...int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldNotIn(FieldAppID, vs...))
}

// AppIDGT applies the GT predicate on the "app_id" field.
func AppIDGT(v int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldGT(FieldAppID, v))
}

// AppIDGTE applies the GTE predicate on the "app_id" field.
func AppIDGTE(v int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldGTE(FieldAppID, v))
}

// AppIDLT applies the LT predicate on the "app_id" field.
func AppIDLT(v int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldLT(FieldAppID, v))
}

// AppIDLTE applies the LTE predicate on the "app_id" field.
func AppIDLTE(v int) predicate.OrgApp {
	return predicate.OrgApp(sql.FieldLTE(FieldAppID, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.OrgApp) predicate.OrgApp {
	return predicate.OrgApp(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.OrgApp) predicate.OrgApp {
	return predicate.OrgApp(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.OrgApp) predicate.OrgApp {
	return predicate.OrgApp(sql.NotPredicates(p))
}
