/* eslint-disable */
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /**
   * Define a Relay Cursor type:
   * https://relay.dev/graphql/connections.htm#sec-Cursor
   */
  Cursor: { input: any; output: any; }
  /** An object with a Global ID,for using in Noder interface. */
  GID: { input: any; output: any; }
  /** The builtin Time type */
  Time: { input: any; output: any; }
};

/**
 * CreateDeploymentInput is used for create Deployment object.
 * Input was generated by ent.
 */
export type CreateDeploymentInput = {
  /** 所属应用ID */
  appID: Scalars['ID']['input'];
  decisionReqIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** 部署时间 */
  deployTime?: InputMaybe<Scalars['Time']['input']>;
  /** 名称 */
  name?: InputMaybe<Scalars['String']['input']>;
  procDefIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** 来源 */
  source?: InputMaybe<Scalars['String']['input']>;
  tenantID: Scalars['Int']['input'];
};

/**
 * CreateIdentityLinkInput is used for create IdentityLink object.
 * Input was generated by ent.
 */
export type CreateIdentityLinkInput = {
  /** 分配人 */
  assignerID?: InputMaybe<Scalars['ID']['input']>;
  /** 评论 */
  comments?: InputMaybe<Scalars['String']['input']>;
  /** 组ID */
  groupID?: InputMaybe<Scalars['ID']['input']>;
  /** 分配,候选,参与,上级,抄送 */
  linkType: IdentityLinkLinkType;
  /** 初始化,认领,删除,通过,驳回 */
  operationType: IdentityLinkOperationType;
  /** 流程定义ID */
  procDefID: Scalars['ID']['input'];
  taskID: Scalars['ID']['input'];
  tenantID: Scalars['Int']['input'];
  /** 用户ID */
  userID?: InputMaybe<Scalars['ID']['input']>;
};

export type DecisionDef = Node & {
  __typename?: 'DecisionDef';
  /** 所属应用ID */
  appID: Scalars['ID']['output'];
  /** 分类 */
  category?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Time']['output'];
  createdBy: Scalars['Int']['output'];
  /** 部署ID */
  deploymentID: Scalars['Int']['output'];
  id: Scalars['ID']['output'];
  /** KEY */
  key: Scalars['String']['output'];
  /** 名称 */
  name?: Maybe<Scalars['String']['output']>;
  reqDef: DecisionReqDef;
  /** 决策定义ID */
  reqDefID: Scalars['ID']['output'];
  /** 决策定义key */
  reqDefKey: Scalars['String']['output'];
  /** 小版本 */
  revision?: Maybe<Scalars['Int']['output']>;
  tenantID: Scalars['Int']['output'];
  updatedAt?: Maybe<Scalars['Time']['output']>;
  updatedBy?: Maybe<Scalars['Int']['output']>;
  /** 版本 */
  version: Scalars['Int']['output'];
  /** 版本标签 */
  versionTag?: Maybe<Scalars['String']['output']>;
};

/** Ordering options for DecisionDef connections */
export type DecisionDefOrder = {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order DecisionDefs. */
  field: DecisionDefOrderField;
};

/** Properties by which DecisionDef connections can be ordered. */
export enum DecisionDefOrderField {
  CreatedAt = 'createdAt'
}

/**
 * DecisionDefWhereInput is used for filtering DecisionDef objects.
 * Input was generated by ent.
 */
export type DecisionDefWhereInput = {
  and?: InputMaybe<Array<DecisionDefWhereInput>>;
  /** app_id field predicates */
  appID?: InputMaybe<Scalars['ID']['input']>;
  appIDGT?: InputMaybe<Scalars['ID']['input']>;
  appIDGTE?: InputMaybe<Scalars['ID']['input']>;
  appIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  appIDLT?: InputMaybe<Scalars['ID']['input']>;
  appIDLTE?: InputMaybe<Scalars['ID']['input']>;
  appIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  appIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** category field predicates */
  category?: InputMaybe<Scalars['String']['input']>;
  categoryContains?: InputMaybe<Scalars['String']['input']>;
  categoryContainsFold?: InputMaybe<Scalars['String']['input']>;
  categoryEqualFold?: InputMaybe<Scalars['String']['input']>;
  categoryGT?: InputMaybe<Scalars['String']['input']>;
  categoryGTE?: InputMaybe<Scalars['String']['input']>;
  categoryHasPrefix?: InputMaybe<Scalars['String']['input']>;
  categoryHasSuffix?: InputMaybe<Scalars['String']['input']>;
  categoryIn?: InputMaybe<Array<Scalars['String']['input']>>;
  categoryIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  categoryLT?: InputMaybe<Scalars['String']['input']>;
  categoryLTE?: InputMaybe<Scalars['String']['input']>;
  categoryNEQ?: InputMaybe<Scalars['String']['input']>;
  categoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  categoryNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['Int']['input']>;
  createdByGT?: InputMaybe<Scalars['Int']['input']>;
  createdByGTE?: InputMaybe<Scalars['Int']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  createdByLT?: InputMaybe<Scalars['Int']['input']>;
  createdByLTE?: InputMaybe<Scalars['Int']['input']>;
  createdByNEQ?: InputMaybe<Scalars['Int']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** deployment_id field predicates */
  deploymentID?: InputMaybe<Scalars['Int']['input']>;
  deploymentIDGT?: InputMaybe<Scalars['Int']['input']>;
  deploymentIDGTE?: InputMaybe<Scalars['Int']['input']>;
  deploymentIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  deploymentIDLT?: InputMaybe<Scalars['Int']['input']>;
  deploymentIDLTE?: InputMaybe<Scalars['Int']['input']>;
  deploymentIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  deploymentIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** req_def edge predicates */
  hasReqDef?: InputMaybe<Scalars['Boolean']['input']>;
  hasReqDefWith?: InputMaybe<Array<DecisionReqDefWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** key field predicates */
  key?: InputMaybe<Scalars['String']['input']>;
  keyContains?: InputMaybe<Scalars['String']['input']>;
  keyContainsFold?: InputMaybe<Scalars['String']['input']>;
  keyEqualFold?: InputMaybe<Scalars['String']['input']>;
  keyGT?: InputMaybe<Scalars['String']['input']>;
  keyGTE?: InputMaybe<Scalars['String']['input']>;
  keyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  keyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  keyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  keyLT?: InputMaybe<Scalars['String']['input']>;
  keyLTE?: InputMaybe<Scalars['String']['input']>;
  keyNEQ?: InputMaybe<Scalars['String']['input']>;
  keyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<DecisionDefWhereInput>;
  or?: InputMaybe<Array<DecisionDefWhereInput>>;
  /** req_def_id field predicates */
  reqDefID?: InputMaybe<Scalars['ID']['input']>;
  reqDefIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  reqDefIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  reqDefIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** req_def_key field predicates */
  reqDefKey?: InputMaybe<Scalars['String']['input']>;
  reqDefKeyContains?: InputMaybe<Scalars['String']['input']>;
  reqDefKeyContainsFold?: InputMaybe<Scalars['String']['input']>;
  reqDefKeyEqualFold?: InputMaybe<Scalars['String']['input']>;
  reqDefKeyGT?: InputMaybe<Scalars['String']['input']>;
  reqDefKeyGTE?: InputMaybe<Scalars['String']['input']>;
  reqDefKeyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  reqDefKeyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  reqDefKeyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  reqDefKeyLT?: InputMaybe<Scalars['String']['input']>;
  reqDefKeyLTE?: InputMaybe<Scalars['String']['input']>;
  reqDefKeyNEQ?: InputMaybe<Scalars['String']['input']>;
  reqDefKeyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** revision field predicates */
  revision?: InputMaybe<Scalars['Int']['input']>;
  revisionGT?: InputMaybe<Scalars['Int']['input']>;
  revisionGTE?: InputMaybe<Scalars['Int']['input']>;
  revisionIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  revisionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  revisionLT?: InputMaybe<Scalars['Int']['input']>;
  revisionLTE?: InputMaybe<Scalars['Int']['input']>;
  revisionNEQ?: InputMaybe<Scalars['Int']['input']>;
  revisionNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  revisionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** tenant_id field predicates */
  tenantID?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  tenantIDLT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDLTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['Int']['input']>;
  updatedByGT?: InputMaybe<Scalars['Int']['input']>;
  updatedByGTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['Int']['input']>;
  updatedByLTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['Int']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** version field predicates */
  version?: InputMaybe<Scalars['Int']['input']>;
  versionGT?: InputMaybe<Scalars['Int']['input']>;
  versionGTE?: InputMaybe<Scalars['Int']['input']>;
  versionIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  versionLT?: InputMaybe<Scalars['Int']['input']>;
  versionLTE?: InputMaybe<Scalars['Int']['input']>;
  versionNEQ?: InputMaybe<Scalars['Int']['input']>;
  versionNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** version_tag field predicates */
  versionTag?: InputMaybe<Scalars['String']['input']>;
  versionTagContains?: InputMaybe<Scalars['String']['input']>;
  versionTagContainsFold?: InputMaybe<Scalars['String']['input']>;
  versionTagEqualFold?: InputMaybe<Scalars['String']['input']>;
  versionTagGT?: InputMaybe<Scalars['String']['input']>;
  versionTagGTE?: InputMaybe<Scalars['String']['input']>;
  versionTagHasPrefix?: InputMaybe<Scalars['String']['input']>;
  versionTagHasSuffix?: InputMaybe<Scalars['String']['input']>;
  versionTagIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionTagIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  versionTagLT?: InputMaybe<Scalars['String']['input']>;
  versionTagLTE?: InputMaybe<Scalars['String']['input']>;
  versionTagNEQ?: InputMaybe<Scalars['String']['input']>;
  versionTagNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionTagNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DecisionReqDef = Node & {
  __typename?: 'DecisionReqDef';
  /** 所属应用ID */
  appID: Scalars['ID']['output'];
  /** 分类 */
  category?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Time']['output'];
  createdBy: Scalars['Int']['output'];
  decisionDefs?: Maybe<Array<DecisionDef>>;
  deployment: Deployment;
  /** 部署ID */
  deploymentID: Scalars['ID']['output'];
  id: Scalars['ID']['output'];
  /** KEY */
  key: Scalars['String']['output'];
  /** 名称 */
  name?: Maybe<Scalars['String']['output']>;
  /** 流程文件id */
  resourceID?: Maybe<Scalars['Int']['output']>;
  /** 流程文件key */
  resourceKey?: Maybe<Scalars['String']['output']>;
  /** 小版本 */
  revision?: Maybe<Scalars['Int']['output']>;
  tenantID: Scalars['Int']['output'];
  updatedAt?: Maybe<Scalars['Time']['output']>;
  updatedBy?: Maybe<Scalars['Int']['output']>;
  /** 版本 */
  version: Scalars['Int']['output'];
};

/** Ordering options for DecisionReqDef connections */
export type DecisionReqDefOrder = {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order DecisionReqDefs. */
  field: DecisionReqDefOrderField;
};

/** Properties by which DecisionReqDef connections can be ordered. */
export enum DecisionReqDefOrderField {
  CreatedAt = 'createdAt'
}

/**
 * DecisionReqDefWhereInput is used for filtering DecisionReqDef objects.
 * Input was generated by ent.
 */
export type DecisionReqDefWhereInput = {
  and?: InputMaybe<Array<DecisionReqDefWhereInput>>;
  /** app_id field predicates */
  appID?: InputMaybe<Scalars['ID']['input']>;
  appIDGT?: InputMaybe<Scalars['ID']['input']>;
  appIDGTE?: InputMaybe<Scalars['ID']['input']>;
  appIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  appIDLT?: InputMaybe<Scalars['ID']['input']>;
  appIDLTE?: InputMaybe<Scalars['ID']['input']>;
  appIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  appIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** category field predicates */
  category?: InputMaybe<Scalars['String']['input']>;
  categoryContains?: InputMaybe<Scalars['String']['input']>;
  categoryContainsFold?: InputMaybe<Scalars['String']['input']>;
  categoryEqualFold?: InputMaybe<Scalars['String']['input']>;
  categoryGT?: InputMaybe<Scalars['String']['input']>;
  categoryGTE?: InputMaybe<Scalars['String']['input']>;
  categoryHasPrefix?: InputMaybe<Scalars['String']['input']>;
  categoryHasSuffix?: InputMaybe<Scalars['String']['input']>;
  categoryIn?: InputMaybe<Array<Scalars['String']['input']>>;
  categoryIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  categoryLT?: InputMaybe<Scalars['String']['input']>;
  categoryLTE?: InputMaybe<Scalars['String']['input']>;
  categoryNEQ?: InputMaybe<Scalars['String']['input']>;
  categoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  categoryNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['Int']['input']>;
  createdByGT?: InputMaybe<Scalars['Int']['input']>;
  createdByGTE?: InputMaybe<Scalars['Int']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  createdByLT?: InputMaybe<Scalars['Int']['input']>;
  createdByLTE?: InputMaybe<Scalars['Int']['input']>;
  createdByNEQ?: InputMaybe<Scalars['Int']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** deployment_id field predicates */
  deploymentID?: InputMaybe<Scalars['ID']['input']>;
  deploymentIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  deploymentIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  deploymentIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** decision_defs edge predicates */
  hasDecisionDefs?: InputMaybe<Scalars['Boolean']['input']>;
  hasDecisionDefsWith?: InputMaybe<Array<DecisionDefWhereInput>>;
  /** deployment edge predicates */
  hasDeployment?: InputMaybe<Scalars['Boolean']['input']>;
  hasDeploymentWith?: InputMaybe<Array<DeploymentWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** key field predicates */
  key?: InputMaybe<Scalars['String']['input']>;
  keyContains?: InputMaybe<Scalars['String']['input']>;
  keyContainsFold?: InputMaybe<Scalars['String']['input']>;
  keyEqualFold?: InputMaybe<Scalars['String']['input']>;
  keyGT?: InputMaybe<Scalars['String']['input']>;
  keyGTE?: InputMaybe<Scalars['String']['input']>;
  keyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  keyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  keyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  keyLT?: InputMaybe<Scalars['String']['input']>;
  keyLTE?: InputMaybe<Scalars['String']['input']>;
  keyNEQ?: InputMaybe<Scalars['String']['input']>;
  keyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<DecisionReqDefWhereInput>;
  or?: InputMaybe<Array<DecisionReqDefWhereInput>>;
  /** revision field predicates */
  revision?: InputMaybe<Scalars['Int']['input']>;
  revisionGT?: InputMaybe<Scalars['Int']['input']>;
  revisionGTE?: InputMaybe<Scalars['Int']['input']>;
  revisionIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  revisionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  revisionLT?: InputMaybe<Scalars['Int']['input']>;
  revisionLTE?: InputMaybe<Scalars['Int']['input']>;
  revisionNEQ?: InputMaybe<Scalars['Int']['input']>;
  revisionNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  revisionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** tenant_id field predicates */
  tenantID?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  tenantIDLT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDLTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['Int']['input']>;
  updatedByGT?: InputMaybe<Scalars['Int']['input']>;
  updatedByGTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['Int']['input']>;
  updatedByLTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['Int']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** version field predicates */
  version?: InputMaybe<Scalars['Int']['input']>;
  versionGT?: InputMaybe<Scalars['Int']['input']>;
  versionGTE?: InputMaybe<Scalars['Int']['input']>;
  versionIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  versionLT?: InputMaybe<Scalars['Int']['input']>;
  versionLTE?: InputMaybe<Scalars['Int']['input']>;
  versionNEQ?: InputMaybe<Scalars['Int']['input']>;
  versionNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type DeployDiagramInput = {
  /** 所属应用 */
  appID: Scalars['ID']['input'];
  /** 部署名称 */
  name: Scalars['String']['input'];
  /** 流程图文件ID */
  resourceID?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** 流程文件 */
  resourceKey?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type Deployment = Node & {
  __typename?: 'Deployment';
  /** 所属应用ID */
  appID: Scalars['ID']['output'];
  createdAt: Scalars['Time']['output'];
  createdBy: Scalars['Int']['output'];
  decisionReqs?: Maybe<Array<DecisionReqDef>>;
  /** 部署时间 */
  deployTime: Scalars['Time']['output'];
  id: Scalars['ID']['output'];
  /** 名称 */
  name?: Maybe<Scalars['String']['output']>;
  procDefs?: Maybe<Array<ProcDef>>;
  /** 来源 */
  source?: Maybe<Scalars['String']['output']>;
  tenantID: Scalars['Int']['output'];
  updatedAt?: Maybe<Scalars['Time']['output']>;
  updatedBy?: Maybe<Scalars['Int']['output']>;
};

/** A connection to a list of items. */
export type DeploymentConnection = {
  __typename?: 'DeploymentConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<DeploymentEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type DeploymentEdge = {
  __typename?: 'DeploymentEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<Deployment>;
};

/** Ordering options for Deployment connections */
export type DeploymentOrder = {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order Deployments. */
  field: DeploymentOrderField;
};

/** Properties by which Deployment connections can be ordered. */
export enum DeploymentOrderField {
  CreatedAt = 'createdAt'
}

/**
 * DeploymentWhereInput is used for filtering Deployment objects.
 * Input was generated by ent.
 */
export type DeploymentWhereInput = {
  and?: InputMaybe<Array<DeploymentWhereInput>>;
  /** app_id field predicates */
  appID?: InputMaybe<Scalars['ID']['input']>;
  appIDGT?: InputMaybe<Scalars['ID']['input']>;
  appIDGTE?: InputMaybe<Scalars['ID']['input']>;
  appIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  appIDLT?: InputMaybe<Scalars['ID']['input']>;
  appIDLTE?: InputMaybe<Scalars['ID']['input']>;
  appIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  appIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['Int']['input']>;
  createdByGT?: InputMaybe<Scalars['Int']['input']>;
  createdByGTE?: InputMaybe<Scalars['Int']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  createdByLT?: InputMaybe<Scalars['Int']['input']>;
  createdByLTE?: InputMaybe<Scalars['Int']['input']>;
  createdByNEQ?: InputMaybe<Scalars['Int']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** deploy_time field predicates */
  deployTime?: InputMaybe<Scalars['Time']['input']>;
  deployTimeGT?: InputMaybe<Scalars['Time']['input']>;
  deployTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  deployTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deployTimeLT?: InputMaybe<Scalars['Time']['input']>;
  deployTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  deployTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  deployTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** decision_reqs edge predicates */
  hasDecisionReqs?: InputMaybe<Scalars['Boolean']['input']>;
  hasDecisionReqsWith?: InputMaybe<Array<DecisionReqDefWhereInput>>;
  /** proc_defs edge predicates */
  hasProcDefs?: InputMaybe<Scalars['Boolean']['input']>;
  hasProcDefsWith?: InputMaybe<Array<ProcDefWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<DeploymentWhereInput>;
  or?: InputMaybe<Array<DeploymentWhereInput>>;
  /** source field predicates */
  source?: InputMaybe<Scalars['String']['input']>;
  sourceContains?: InputMaybe<Scalars['String']['input']>;
  sourceContainsFold?: InputMaybe<Scalars['String']['input']>;
  sourceEqualFold?: InputMaybe<Scalars['String']['input']>;
  sourceGT?: InputMaybe<Scalars['String']['input']>;
  sourceGTE?: InputMaybe<Scalars['String']['input']>;
  sourceHasPrefix?: InputMaybe<Scalars['String']['input']>;
  sourceHasSuffix?: InputMaybe<Scalars['String']['input']>;
  sourceIn?: InputMaybe<Array<Scalars['String']['input']>>;
  sourceIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  sourceLT?: InputMaybe<Scalars['String']['input']>;
  sourceLTE?: InputMaybe<Scalars['String']['input']>;
  sourceNEQ?: InputMaybe<Scalars['String']['input']>;
  sourceNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  sourceNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** tenant_id field predicates */
  tenantID?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  tenantIDLT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDLTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['Int']['input']>;
  updatedByGT?: InputMaybe<Scalars['Int']['input']>;
  updatedByGTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['Int']['input']>;
  updatedByLTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['Int']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type IdentityLink = Node & {
  __typename?: 'IdentityLink';
  /** 分配人 */
  assignerID?: Maybe<Scalars['ID']['output']>;
  /** 评论 */
  comments?: Maybe<Scalars['String']['output']>;
  /** 组ID */
  groupID?: Maybe<Scalars['ID']['output']>;
  id: Scalars['ID']['output'];
  /** 分配,候选,参与,上级,抄送 */
  linkType: IdentityLinkLinkType;
  /** 初始化,认领,删除,通过,驳回 */
  operationType: IdentityLinkOperationType;
  /** 流程定义ID */
  procDefID: Scalars['ID']['output'];
  /** 流程任务 */
  task: Task;
  /** 流程实例ID */
  taskID: Scalars['ID']['output'];
  tenantID: Scalars['Int']['output'];
  /** 用户ID */
  userID?: Maybe<Scalars['ID']['output']>;
};

/** IdentityLinkLinkType is enum for the field link_type */
export enum IdentityLinkLinkType {
  Assignee = 'assignee',
  Candidate = 'candidate',
  Manager = 'manager',
  Notifier = 'notifier',
  Participant = 'participant'
}

/** IdentityLinkOperationType is enum for the field operation_type */
export enum IdentityLinkOperationType {
  Claim = 'claim',
  Delete = 'delete',
  Init = 'init',
  Pass = 'pass',
  Reject = 'reject'
}

/**
 * IdentityLinkWhereInput is used for filtering IdentityLink objects.
 * Input was generated by ent.
 */
export type IdentityLinkWhereInput = {
  and?: InputMaybe<Array<IdentityLinkWhereInput>>;
  /** assigner_id field predicates */
  assignerID?: InputMaybe<Scalars['ID']['input']>;
  assignerIDGT?: InputMaybe<Scalars['ID']['input']>;
  assignerIDGTE?: InputMaybe<Scalars['ID']['input']>;
  assignerIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  assignerIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  assignerIDLT?: InputMaybe<Scalars['ID']['input']>;
  assignerIDLTE?: InputMaybe<Scalars['ID']['input']>;
  assignerIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  assignerIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  assignerIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** group_id field predicates */
  groupID?: InputMaybe<Scalars['ID']['input']>;
  groupIDGT?: InputMaybe<Scalars['ID']['input']>;
  groupIDGTE?: InputMaybe<Scalars['ID']['input']>;
  groupIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  groupIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  groupIDLT?: InputMaybe<Scalars['ID']['input']>;
  groupIDLTE?: InputMaybe<Scalars['ID']['input']>;
  groupIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  groupIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  groupIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** task edge predicates */
  hasTask?: InputMaybe<Scalars['Boolean']['input']>;
  hasTaskWith?: InputMaybe<Array<TaskWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** link_type field predicates */
  linkType?: InputMaybe<IdentityLinkLinkType>;
  linkTypeIn?: InputMaybe<Array<IdentityLinkLinkType>>;
  linkTypeNEQ?: InputMaybe<IdentityLinkLinkType>;
  linkTypeNotIn?: InputMaybe<Array<IdentityLinkLinkType>>;
  not?: InputMaybe<IdentityLinkWhereInput>;
  /** operation_type field predicates */
  operationType?: InputMaybe<IdentityLinkOperationType>;
  operationTypeIn?: InputMaybe<Array<IdentityLinkOperationType>>;
  operationTypeNEQ?: InputMaybe<IdentityLinkOperationType>;
  operationTypeNotIn?: InputMaybe<Array<IdentityLinkOperationType>>;
  or?: InputMaybe<Array<IdentityLinkWhereInput>>;
  /** proc_def_id field predicates */
  procDefID?: InputMaybe<Scalars['ID']['input']>;
  procDefIDGT?: InputMaybe<Scalars['ID']['input']>;
  procDefIDGTE?: InputMaybe<Scalars['ID']['input']>;
  procDefIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  procDefIDLT?: InputMaybe<Scalars['ID']['input']>;
  procDefIDLTE?: InputMaybe<Scalars['ID']['input']>;
  procDefIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  procDefIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** task_id field predicates */
  taskID?: InputMaybe<Scalars['ID']['input']>;
  taskIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  taskIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  taskIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** tenant_id field predicates */
  tenantID?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  tenantIDLT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDLTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** user_id field predicates */
  userID?: InputMaybe<Scalars['ID']['input']>;
  userIDGT?: InputMaybe<Scalars['ID']['input']>;
  userIDGTE?: InputMaybe<Scalars['ID']['input']>;
  userIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  userIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  userIDLT?: InputMaybe<Scalars['ID']['input']>;
  userIDLTE?: InputMaybe<Scalars['ID']['input']>;
  userIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  userIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  userIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type Mutation = {
  __typename?: 'Mutation';
  /** 放弃任务 */
  abandonTask: Scalars['Boolean']['output'];
  /** 认领任务 */
  claimTask: Scalars['Boolean']['output'];
  /** 完成任务 */
  completeTask: Scalars['Boolean']['output'];
  /** 上传部署流程图 */
  deployDiagram?: Maybe<Deployment>;
  /** 启动工作流实例 */
  startProcessInstance: WorkflowRun;
  /** 启动指定工作流实例 */
  startWorkflow: Scalars['Boolean']['output'];
};


export type MutationAbandonTaskArgs = {
  taskID: Scalars['ID']['input'];
};


export type MutationClaimTaskArgs = {
  taskID: Scalars['ID']['input'];
};


export type MutationCompleteTaskArgs = {
  input: UpdateIdentityLinkInput;
};


export type MutationDeployDiagramArgs = {
  input: DeployDiagramInput;
};


export type MutationStartProcessInstanceArgs = {
  input: StartProcessInput;
};


export type MutationStartWorkflowArgs = {
  input: WorkflowRunInput;
};

/**
 * An object with an ID.
 * Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
 */
export type Node = {
  /** The id of the object. */
  id: Scalars['ID']['output'];
};

/** Possible directions in which to order a list of items when provided an `orderBy` argument. */
export enum OrderDirection {
  /** Specifies an ascending order for a given `orderBy` argument. */
  Asc = 'ASC',
  /** Specifies a descending order for a given `orderBy` argument. */
  Desc = 'DESC'
}

export type OrgRole = Node & {
  __typename?: 'OrgRole';
  id: Scalars['ID']['output'];
  /** 类型,group:组,role:角色 */
  kind: OrgRoleKind;
  /** 名称 */
  name: Scalars['String']['output'];
  /** 组织ID */
  orgID?: Maybe<Scalars['Int']['output']>;
};

/** OrgRoleKind is enum for the field kind */
export enum OrgRoleKind {
  Group = 'group',
  Role = 'role'
}

/**
 * OrgRoleWhereInput is used for filtering OrgRole objects.
 * Input was generated by ent.
 */
export type OrgRoleWhereInput = {
  and?: InputMaybe<Array<OrgRoleWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** kind field predicates */
  kind?: InputMaybe<OrgRoleKind>;
  kindIn?: InputMaybe<Array<OrgRoleKind>>;
  kindNEQ?: InputMaybe<OrgRoleKind>;
  kindNotIn?: InputMaybe<Array<OrgRoleKind>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<OrgRoleWhereInput>;
  or?: InputMaybe<Array<OrgRoleWhereInput>>;
  /** org_id field predicates */
  orgID?: InputMaybe<Scalars['Int']['input']>;
  orgIDGT?: InputMaybe<Scalars['Int']['input']>;
  orgIDGTE?: InputMaybe<Scalars['Int']['input']>;
  orgIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  orgIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  orgIDLT?: InputMaybe<Scalars['Int']['input']>;
  orgIDLTE?: InputMaybe<Scalars['Int']['input']>;
  orgIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  orgIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  orgIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type OrgUser = Node & {
  __typename?: 'OrgUser';
  /** 在组织内的显示名称 */
  displayName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  /** 加入时间 */
  joinedAt: Scalars['Time']['output'];
  /** 组织ID */
  orgID: Scalars['Int']['output'];
  /** 用户ID */
  userID: Scalars['Int']['output'];
};

/**
 * OrgUserWhereInput is used for filtering OrgUser objects.
 * Input was generated by ent.
 */
export type OrgUserWhereInput = {
  and?: InputMaybe<Array<OrgUserWhereInput>>;
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayNameContains?: InputMaybe<Scalars['String']['input']>;
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  displayNameGT?: InputMaybe<Scalars['String']['input']>;
  displayNameGTE?: InputMaybe<Scalars['String']['input']>;
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  displayNameLT?: InputMaybe<Scalars['String']['input']>;
  displayNameLTE?: InputMaybe<Scalars['String']['input']>;
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>;
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** joined_at field predicates */
  joinedAt?: InputMaybe<Scalars['Time']['input']>;
  joinedAtGT?: InputMaybe<Scalars['Time']['input']>;
  joinedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  joinedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  joinedAtLT?: InputMaybe<Scalars['Time']['input']>;
  joinedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  joinedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  joinedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  not?: InputMaybe<OrgUserWhereInput>;
  or?: InputMaybe<Array<OrgUserWhereInput>>;
  /** org_id field predicates */
  orgID?: InputMaybe<Scalars['Int']['input']>;
  orgIDGT?: InputMaybe<Scalars['Int']['input']>;
  orgIDGTE?: InputMaybe<Scalars['Int']['input']>;
  orgIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  orgIDLT?: InputMaybe<Scalars['Int']['input']>;
  orgIDLTE?: InputMaybe<Scalars['Int']['input']>;
  orgIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  orgIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** user_id field predicates */
  userID?: InputMaybe<Scalars['Int']['input']>;
  userIDGT?: InputMaybe<Scalars['Int']['input']>;
  userIDGTE?: InputMaybe<Scalars['Int']['input']>;
  userIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  userIDLT?: InputMaybe<Scalars['Int']['input']>;
  userIDLTE?: InputMaybe<Scalars['Int']['input']>;
  userIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  userIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
};

/**
 * Information about pagination in a connection.
 * https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
 */
export type PageInfo = {
  __typename?: 'PageInfo';
  /** When paginating forwards, the cursor to continue. */
  endCursor?: Maybe<Scalars['Cursor']['output']>;
  /** When paginating forwards, are there more items? */
  hasNextPage: Scalars['Boolean']['output'];
  /** When paginating backwards, are there more items? */
  hasPreviousPage: Scalars['Boolean']['output'];
  /** When paginating backwards, the cursor to continue. */
  startCursor?: Maybe<Scalars['Cursor']['output']>;
};

export type ProcDef = Node & {
  __typename?: 'ProcDef';
  /** 所属应用ID */
  appID: Scalars['ID']['output'];
  /** 分类 */
  category?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Time']['output'];
  createdBy: Scalars['Int']['output'];
  deployment: Deployment;
  /** 部署ID */
  deploymentID: Scalars['ID']['output'];
  id: Scalars['ID']['output'];
  /** process id */
  key: Scalars['String']['output'];
  /** 名称 */
  name?: Maybe<Scalars['String']['output']>;
  procInstances: ProcInstConnection;
  /** 流程文件id */
  resourceID?: Maybe<Scalars['Int']['output']>;
  /** 流程文件key */
  resourceKey?: Maybe<Scalars['String']['output']>;
  /** 小版本 */
  revision?: Maybe<Scalars['Int']['output']>;
  /** 状态 */
  status: ProcDefSimpleStatus;
  tenantID: Scalars['Int']['output'];
  updatedAt?: Maybe<Scalars['Time']['output']>;
  updatedBy?: Maybe<Scalars['Int']['output']>;
  /** 版本 */
  version?: Maybe<Scalars['Int']['output']>;
  /** 版本标签 */
  versionTag?: Maybe<Scalars['String']['output']>;
};


export type ProcDefProcInstancesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ProcInstOrder>;
  where?: InputMaybe<ProcInstWhereInput>;
};

/** Ordering options for ProcDef connections */
export type ProcDefOrder = {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order ProcDefs. */
  field: ProcDefOrderField;
};

/** Properties by which ProcDef connections can be ordered. */
export enum ProcDefOrderField {
  CreatedAt = 'createdAt'
}

/** ProcDefSimpleStatus is enum for the field status */
export enum ProcDefSimpleStatus {
  Active = 'active',
  Inactive = 'inactive',
  Processing = 'processing'
}

/**
 * ProcDefWhereInput is used for filtering ProcDef objects.
 * Input was generated by ent.
 */
export type ProcDefWhereInput = {
  and?: InputMaybe<Array<ProcDefWhereInput>>;
  /** app_id field predicates */
  appID?: InputMaybe<Scalars['ID']['input']>;
  appIDGT?: InputMaybe<Scalars['ID']['input']>;
  appIDGTE?: InputMaybe<Scalars['ID']['input']>;
  appIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  appIDLT?: InputMaybe<Scalars['ID']['input']>;
  appIDLTE?: InputMaybe<Scalars['ID']['input']>;
  appIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  appIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** category field predicates */
  category?: InputMaybe<Scalars['String']['input']>;
  categoryContains?: InputMaybe<Scalars['String']['input']>;
  categoryContainsFold?: InputMaybe<Scalars['String']['input']>;
  categoryEqualFold?: InputMaybe<Scalars['String']['input']>;
  categoryGT?: InputMaybe<Scalars['String']['input']>;
  categoryGTE?: InputMaybe<Scalars['String']['input']>;
  categoryHasPrefix?: InputMaybe<Scalars['String']['input']>;
  categoryHasSuffix?: InputMaybe<Scalars['String']['input']>;
  categoryIn?: InputMaybe<Array<Scalars['String']['input']>>;
  categoryIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  categoryLT?: InputMaybe<Scalars['String']['input']>;
  categoryLTE?: InputMaybe<Scalars['String']['input']>;
  categoryNEQ?: InputMaybe<Scalars['String']['input']>;
  categoryNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  categoryNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['Int']['input']>;
  createdByGT?: InputMaybe<Scalars['Int']['input']>;
  createdByGTE?: InputMaybe<Scalars['Int']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  createdByLT?: InputMaybe<Scalars['Int']['input']>;
  createdByLTE?: InputMaybe<Scalars['Int']['input']>;
  createdByNEQ?: InputMaybe<Scalars['Int']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** deployment_id field predicates */
  deploymentID?: InputMaybe<Scalars['ID']['input']>;
  deploymentIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  deploymentIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  deploymentIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** deployment edge predicates */
  hasDeployment?: InputMaybe<Scalars['Boolean']['input']>;
  hasDeploymentWith?: InputMaybe<Array<DeploymentWhereInput>>;
  /** proc_instances edge predicates */
  hasProcInstances?: InputMaybe<Scalars['Boolean']['input']>;
  hasProcInstancesWith?: InputMaybe<Array<ProcInstWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** key field predicates */
  key?: InputMaybe<Scalars['String']['input']>;
  keyContains?: InputMaybe<Scalars['String']['input']>;
  keyContainsFold?: InputMaybe<Scalars['String']['input']>;
  keyEqualFold?: InputMaybe<Scalars['String']['input']>;
  keyGT?: InputMaybe<Scalars['String']['input']>;
  keyGTE?: InputMaybe<Scalars['String']['input']>;
  keyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  keyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  keyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  keyLT?: InputMaybe<Scalars['String']['input']>;
  keyLTE?: InputMaybe<Scalars['String']['input']>;
  keyNEQ?: InputMaybe<Scalars['String']['input']>;
  keyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<ProcDefWhereInput>;
  or?: InputMaybe<Array<ProcDefWhereInput>>;
  /** revision field predicates */
  revision?: InputMaybe<Scalars['Int']['input']>;
  revisionGT?: InputMaybe<Scalars['Int']['input']>;
  revisionGTE?: InputMaybe<Scalars['Int']['input']>;
  revisionIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  revisionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  revisionLT?: InputMaybe<Scalars['Int']['input']>;
  revisionLTE?: InputMaybe<Scalars['Int']['input']>;
  revisionNEQ?: InputMaybe<Scalars['Int']['input']>;
  revisionNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  revisionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<ProcDefSimpleStatus>;
  statusIn?: InputMaybe<Array<ProcDefSimpleStatus>>;
  statusNEQ?: InputMaybe<ProcDefSimpleStatus>;
  statusNotIn?: InputMaybe<Array<ProcDefSimpleStatus>>;
  /** tenant_id field predicates */
  tenantID?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  tenantIDLT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDLTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['Int']['input']>;
  updatedByGT?: InputMaybe<Scalars['Int']['input']>;
  updatedByGTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['Int']['input']>;
  updatedByLTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['Int']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** version field predicates */
  version?: InputMaybe<Scalars['Int']['input']>;
  versionGT?: InputMaybe<Scalars['Int']['input']>;
  versionGTE?: InputMaybe<Scalars['Int']['input']>;
  versionIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  versionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  versionLT?: InputMaybe<Scalars['Int']['input']>;
  versionLTE?: InputMaybe<Scalars['Int']['input']>;
  versionNEQ?: InputMaybe<Scalars['Int']['input']>;
  versionNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  versionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** version_tag field predicates */
  versionTag?: InputMaybe<Scalars['String']['input']>;
  versionTagContains?: InputMaybe<Scalars['String']['input']>;
  versionTagContainsFold?: InputMaybe<Scalars['String']['input']>;
  versionTagEqualFold?: InputMaybe<Scalars['String']['input']>;
  versionTagGT?: InputMaybe<Scalars['String']['input']>;
  versionTagGTE?: InputMaybe<Scalars['String']['input']>;
  versionTagHasPrefix?: InputMaybe<Scalars['String']['input']>;
  versionTagHasSuffix?: InputMaybe<Scalars['String']['input']>;
  versionTagIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionTagIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  versionTagLT?: InputMaybe<Scalars['String']['input']>;
  versionTagLTE?: InputMaybe<Scalars['String']['input']>;
  versionTagNEQ?: InputMaybe<Scalars['String']['input']>;
  versionTagNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  versionTagNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProcInst = Node & {
  __typename?: 'ProcInst';
  /** 所属应用ID */
  appID: Scalars['ID']['output'];
  /** 业务主键 */
  businessKey: Scalars['String']['output'];
  createdAt: Scalars['Time']['output'];
  createdBy: Scalars['Int']['output'];
  /** 删除原因 */
  deletedReason?: Maybe<Scalars['String']['output']>;
  /** 删除时间 */
  deletedTime?: Maybe<Scalars['Time']['output']>;
  /** 持续时间 */
  duration?: Maybe<Scalars['Int']['output']>;
  /** 结束时间 */
  endTime?: Maybe<Scalars['Time']['output']>;
  id: Scalars['ID']['output'];
  /** 流程定义 */
  procDef: ProcDef;
  /** 流程定义ID */
  procDefID: Scalars['ID']['output'];
  /** 根流程实例ID */
  rootInstanceID?: Maybe<Scalars['Int']['output']>;
  /** 开始时间 */
  startTime: Scalars['Time']['output'];
  /** 发起人ID/名称 */
  startUserID: Scalars['ID']['output'];
  /** 状态 */
  status: ProcInstStatus;
  /** 父流程实例ID */
  supperInstanceID?: Maybe<Scalars['Int']['output']>;
  tasks: TaskConnection;
  tenantID: Scalars['Int']['output'];
  updatedAt?: Maybe<Scalars['Time']['output']>;
  updatedBy?: Maybe<Scalars['Int']['output']>;
};


export type ProcInstTasksArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<TaskWhereInput>;
};

/** A connection to a list of items. */
export type ProcInstConnection = {
  __typename?: 'ProcInstConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<ProcInstEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type ProcInstEdge = {
  __typename?: 'ProcInstEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<ProcInst>;
};

/** Ordering options for ProcInst connections */
export type ProcInstOrder = {
  /** The ordering direction. */
  direction?: OrderDirection;
  /** The field by which to order ProcInsts. */
  field: ProcInstOrderField;
};

/** Properties by which ProcInst connections can be ordered. */
export enum ProcInstOrderField {
  CreatedAt = 'createdAt'
}

/** ProcInstStatus is enum for the field status */
export enum ProcInstStatus {
  Active = 'active',
  Completed = 'completed',
  Deleted = 'deleted',
  Failed = 'failed',
  Ready = 'ready',
  Suspended = 'suspended',
  Terminated = 'terminated'
}

/**
 * ProcInstWhereInput is used for filtering ProcInst objects.
 * Input was generated by ent.
 */
export type ProcInstWhereInput = {
  and?: InputMaybe<Array<ProcInstWhereInput>>;
  /** app_id field predicates */
  appID?: InputMaybe<Scalars['ID']['input']>;
  appIDGT?: InputMaybe<Scalars['ID']['input']>;
  appIDGTE?: InputMaybe<Scalars['ID']['input']>;
  appIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  appIDLT?: InputMaybe<Scalars['ID']['input']>;
  appIDLTE?: InputMaybe<Scalars['ID']['input']>;
  appIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  appIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** business_key field predicates */
  businessKey?: InputMaybe<Scalars['String']['input']>;
  businessKeyContains?: InputMaybe<Scalars['String']['input']>;
  businessKeyContainsFold?: InputMaybe<Scalars['String']['input']>;
  businessKeyEqualFold?: InputMaybe<Scalars['String']['input']>;
  businessKeyGT?: InputMaybe<Scalars['String']['input']>;
  businessKeyGTE?: InputMaybe<Scalars['String']['input']>;
  businessKeyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  businessKeyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  businessKeyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  businessKeyLT?: InputMaybe<Scalars['String']['input']>;
  businessKeyLTE?: InputMaybe<Scalars['String']['input']>;
  businessKeyNEQ?: InputMaybe<Scalars['String']['input']>;
  businessKeyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** created_by field predicates */
  createdBy?: InputMaybe<Scalars['Int']['input']>;
  createdByGT?: InputMaybe<Scalars['Int']['input']>;
  createdByGTE?: InputMaybe<Scalars['Int']['input']>;
  createdByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  createdByLT?: InputMaybe<Scalars['Int']['input']>;
  createdByLTE?: InputMaybe<Scalars['Int']['input']>;
  createdByNEQ?: InputMaybe<Scalars['Int']['input']>;
  createdByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** deleted_reason field predicates */
  deletedReason?: InputMaybe<Scalars['String']['input']>;
  deletedReasonContains?: InputMaybe<Scalars['String']['input']>;
  deletedReasonContainsFold?: InputMaybe<Scalars['String']['input']>;
  deletedReasonEqualFold?: InputMaybe<Scalars['String']['input']>;
  deletedReasonGT?: InputMaybe<Scalars['String']['input']>;
  deletedReasonGTE?: InputMaybe<Scalars['String']['input']>;
  deletedReasonHasPrefix?: InputMaybe<Scalars['String']['input']>;
  deletedReasonHasSuffix?: InputMaybe<Scalars['String']['input']>;
  deletedReasonIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedReasonIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedReasonLT?: InputMaybe<Scalars['String']['input']>;
  deletedReasonLTE?: InputMaybe<Scalars['String']['input']>;
  deletedReasonNEQ?: InputMaybe<Scalars['String']['input']>;
  deletedReasonNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  deletedReasonNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** deleted_time field predicates */
  deletedTime?: InputMaybe<Scalars['Time']['input']>;
  deletedTimeGT?: InputMaybe<Scalars['Time']['input']>;
  deletedTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedTimeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedTimeLT?: InputMaybe<Scalars['Time']['input']>;
  deletedTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedTimeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** duration field predicates */
  duration?: InputMaybe<Scalars['Int']['input']>;
  durationGT?: InputMaybe<Scalars['Int']['input']>;
  durationGTE?: InputMaybe<Scalars['Int']['input']>;
  durationIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  durationIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  durationLT?: InputMaybe<Scalars['Int']['input']>;
  durationLTE?: InputMaybe<Scalars['Int']['input']>;
  durationNEQ?: InputMaybe<Scalars['Int']['input']>;
  durationNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  durationNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** end_time field predicates */
  endTime?: InputMaybe<Scalars['Time']['input']>;
  endTimeGT?: InputMaybe<Scalars['Time']['input']>;
  endTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  endTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  endTimeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  endTimeLT?: InputMaybe<Scalars['Time']['input']>;
  endTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  endTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  endTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  endTimeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** proc_def edge predicates */
  hasProcDef?: InputMaybe<Scalars['Boolean']['input']>;
  hasProcDefWith?: InputMaybe<Array<ProcDefWhereInput>>;
  /** tasks edge predicates */
  hasTasks?: InputMaybe<Scalars['Boolean']['input']>;
  hasTasksWith?: InputMaybe<Array<TaskWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<ProcInstWhereInput>;
  or?: InputMaybe<Array<ProcInstWhereInput>>;
  /** proc_def_id field predicates */
  procDefID?: InputMaybe<Scalars['ID']['input']>;
  procDefIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  procDefIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  procDefIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** root_instance_id field predicates */
  rootInstanceID?: InputMaybe<Scalars['Int']['input']>;
  rootInstanceIDGT?: InputMaybe<Scalars['Int']['input']>;
  rootInstanceIDGTE?: InputMaybe<Scalars['Int']['input']>;
  rootInstanceIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  rootInstanceIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  rootInstanceIDLT?: InputMaybe<Scalars['Int']['input']>;
  rootInstanceIDLTE?: InputMaybe<Scalars['Int']['input']>;
  rootInstanceIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  rootInstanceIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  rootInstanceIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** start_time field predicates */
  startTime?: InputMaybe<Scalars['Time']['input']>;
  startTimeGT?: InputMaybe<Scalars['Time']['input']>;
  startTimeGTE?: InputMaybe<Scalars['Time']['input']>;
  startTimeIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  startTimeLT?: InputMaybe<Scalars['Time']['input']>;
  startTimeLTE?: InputMaybe<Scalars['Time']['input']>;
  startTimeNEQ?: InputMaybe<Scalars['Time']['input']>;
  startTimeNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** start_user_id field predicates */
  startUserID?: InputMaybe<Scalars['ID']['input']>;
  startUserIDGT?: InputMaybe<Scalars['ID']['input']>;
  startUserIDGTE?: InputMaybe<Scalars['ID']['input']>;
  startUserIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  startUserIDLT?: InputMaybe<Scalars['ID']['input']>;
  startUserIDLTE?: InputMaybe<Scalars['ID']['input']>;
  startUserIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  startUserIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** status field predicates */
  status?: InputMaybe<ProcInstStatus>;
  statusIn?: InputMaybe<Array<ProcInstStatus>>;
  statusNEQ?: InputMaybe<ProcInstStatus>;
  statusNotIn?: InputMaybe<Array<ProcInstStatus>>;
  /** supper_instance_id field predicates */
  supperInstanceID?: InputMaybe<Scalars['Int']['input']>;
  supperInstanceIDGT?: InputMaybe<Scalars['Int']['input']>;
  supperInstanceIDGTE?: InputMaybe<Scalars['Int']['input']>;
  supperInstanceIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  supperInstanceIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  supperInstanceIDLT?: InputMaybe<Scalars['Int']['input']>;
  supperInstanceIDLTE?: InputMaybe<Scalars['Int']['input']>;
  supperInstanceIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  supperInstanceIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  supperInstanceIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** tenant_id field predicates */
  tenantID?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  tenantIDLT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDLTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_by field predicates */
  updatedBy?: InputMaybe<Scalars['Int']['input']>;
  updatedByGT?: InputMaybe<Scalars['Int']['input']>;
  updatedByGTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updatedByLT?: InputMaybe<Scalars['Int']['input']>;
  updatedByLTE?: InputMaybe<Scalars['Int']['input']>;
  updatedByNEQ?: InputMaybe<Scalars['Int']['input']>;
  updatedByNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  updatedByNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type Query = {
  __typename?: 'Query';
  deployments: DeploymentConnection;
  /** Fetches an object given its ID. */
  node?: Maybe<Node>;
  /** Lookup nodes by a list of IDs. */
  nodes: Array<Maybe<Node>>;
  procInsts: ProcInstConnection;
  tasks: TaskConnection;
};


export type QueryDeploymentsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DeploymentOrder>;
  where?: InputMaybe<DeploymentWhereInput>;
};


export type QueryNodeArgs = {
  id: Scalars['GID']['input'];
};


export type QueryNodesArgs = {
  ids: Array<Scalars['GID']['input']>;
};


export type QueryProcInstsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ProcInstOrder>;
  where?: InputMaybe<ProcInstWhereInput>;
};


export type QueryTasksArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<TaskWhereInput>;
};

export type StartProcessInput = {
  /** 业务ID */
  businessKey: Scalars['String']['input'];
  /** 流程定义ID */
  procDefKey: Scalars['String']['input'];
  /** 流程变量 */
  variables?: InputMaybe<Array<VariableInput>>;
};

export type Task = Node & {
  __typename?: 'Task';
  /** 通过数量 */
  agreeCount: Scalars['Int']['output'];
  /** 设定的受理人 */
  assignee?: Maybe<Scalars['String']['output']>;
  /** 任务描述 */
  comments?: Maybe<Scalars['String']['output']>;
  /** 创建时间 */
  createdAt: Scalars['Time']['output'];
  /** workflow id */
  executionID: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  /** 会签类型 */
  kind: TaskKind;
  /** 任务成员人数 */
  memberCount: Scalars['Int']['output'];
  /** 父任务ID */
  parentID?: Maybe<Scalars['Int']['output']>;
  /** 流程定义ID */
  procDefID: Scalars['Int']['output'];
  /** 流程实例 */
  procInst: ProcInst;
  /** 流程实例ID */
  procInstID: Scalars['ID']['output'];
  /** run id */
  runID?: Maybe<Scalars['String']['output']>;
  /** 默认并行false,顺序执行true */
  sequential: Scalars['Boolean']['output'];
  /** 任务状态 */
  status: TaskStatus;
  /** 流程节点名称 */
  taskDefKey: Scalars['String']['output'];
  /** 任务主体 */
  taskIdentities?: Maybe<Array<IdentityLink>>;
  tenantID: Scalars['Int']['output'];
  /** 未任务成员完成人数 */
  unfinishedCount: Scalars['Int']['output'];
  /** 创建时间 */
  updatedAt: Scalars['Time']['output'];
};

/** A connection to a list of items. */
export type TaskConnection = {
  __typename?: 'TaskConnection';
  /** A list of edges. */
  edges?: Maybe<Array<Maybe<TaskEdge>>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** Identifies the total count of items in the connection. */
  totalCount: Scalars['Int']['output'];
};

/** An edge in a connection. */
export type TaskEdge = {
  __typename?: 'TaskEdge';
  /** A cursor for use in pagination. */
  cursor: Scalars['Cursor']['output'];
  /** The item at the end of the edge. */
  node?: Maybe<Task>;
};

/** TaskKind is enum for the field kind */
export enum TaskKind {
  And = 'AND',
  Or = 'OR'
}

/** TaskStatus is enum for the field status */
export enum TaskStatus {
  Canceled = 'canceled',
  Created = 'created',
  Finished = 'finished',
  Running = 'running'
}

/**
 * TaskWhereInput is used for filtering Task objects.
 * Input was generated by ent.
 */
export type TaskWhereInput = {
  /** agree_count field predicates */
  agreeCount?: InputMaybe<Scalars['Int']['input']>;
  agreeCountGT?: InputMaybe<Scalars['Int']['input']>;
  agreeCountGTE?: InputMaybe<Scalars['Int']['input']>;
  agreeCountIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  agreeCountLT?: InputMaybe<Scalars['Int']['input']>;
  agreeCountLTE?: InputMaybe<Scalars['Int']['input']>;
  agreeCountNEQ?: InputMaybe<Scalars['Int']['input']>;
  agreeCountNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  and?: InputMaybe<Array<TaskWhereInput>>;
  /** assignee field predicates */
  assignee?: InputMaybe<Scalars['String']['input']>;
  assigneeContains?: InputMaybe<Scalars['String']['input']>;
  assigneeContainsFold?: InputMaybe<Scalars['String']['input']>;
  assigneeEqualFold?: InputMaybe<Scalars['String']['input']>;
  assigneeGT?: InputMaybe<Scalars['String']['input']>;
  assigneeGTE?: InputMaybe<Scalars['String']['input']>;
  assigneeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  assigneeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  assigneeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  assigneeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  assigneeLT?: InputMaybe<Scalars['String']['input']>;
  assigneeLTE?: InputMaybe<Scalars['String']['input']>;
  assigneeNEQ?: InputMaybe<Scalars['String']['input']>;
  assigneeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  assigneeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** execution_id field predicates */
  executionID?: InputMaybe<Scalars['String']['input']>;
  executionIDContains?: InputMaybe<Scalars['String']['input']>;
  executionIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  executionIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  executionIDGT?: InputMaybe<Scalars['String']['input']>;
  executionIDGTE?: InputMaybe<Scalars['String']['input']>;
  executionIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  executionIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  executionIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  executionIDLT?: InputMaybe<Scalars['String']['input']>;
  executionIDLTE?: InputMaybe<Scalars['String']['input']>;
  executionIDNEQ?: InputMaybe<Scalars['String']['input']>;
  executionIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** proc_inst edge predicates */
  hasProcInst?: InputMaybe<Scalars['Boolean']['input']>;
  hasProcInstWith?: InputMaybe<Array<ProcInstWhereInput>>;
  /** task_identities edge predicates */
  hasTaskIdentities?: InputMaybe<Scalars['Boolean']['input']>;
  hasTaskIdentitiesWith?: InputMaybe<Array<IdentityLinkWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** kind field predicates */
  kind?: InputMaybe<TaskKind>;
  kindIn?: InputMaybe<Array<TaskKind>>;
  kindNEQ?: InputMaybe<TaskKind>;
  kindNotIn?: InputMaybe<Array<TaskKind>>;
  /** member_count field predicates */
  memberCount?: InputMaybe<Scalars['Int']['input']>;
  memberCountGT?: InputMaybe<Scalars['Int']['input']>;
  memberCountGTE?: InputMaybe<Scalars['Int']['input']>;
  memberCountIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  memberCountLT?: InputMaybe<Scalars['Int']['input']>;
  memberCountLTE?: InputMaybe<Scalars['Int']['input']>;
  memberCountNEQ?: InputMaybe<Scalars['Int']['input']>;
  memberCountNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  not?: InputMaybe<TaskWhereInput>;
  or?: InputMaybe<Array<TaskWhereInput>>;
  /** parent_id field predicates */
  parentID?: InputMaybe<Scalars['Int']['input']>;
  parentIDGT?: InputMaybe<Scalars['Int']['input']>;
  parentIDGTE?: InputMaybe<Scalars['Int']['input']>;
  parentIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  parentIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  parentIDLT?: InputMaybe<Scalars['Int']['input']>;
  parentIDLTE?: InputMaybe<Scalars['Int']['input']>;
  parentIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  parentIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  parentIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** proc_def_id field predicates */
  procDefID?: InputMaybe<Scalars['Int']['input']>;
  procDefIDGT?: InputMaybe<Scalars['Int']['input']>;
  procDefIDGTE?: InputMaybe<Scalars['Int']['input']>;
  procDefIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  procDefIDLT?: InputMaybe<Scalars['Int']['input']>;
  procDefIDLTE?: InputMaybe<Scalars['Int']['input']>;
  procDefIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  procDefIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** proc_inst_id field predicates */
  procInstID?: InputMaybe<Scalars['ID']['input']>;
  procInstIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  procInstIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  procInstIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** run_id field predicates */
  runID?: InputMaybe<Scalars['String']['input']>;
  runIDContains?: InputMaybe<Scalars['String']['input']>;
  runIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  runIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  runIDGT?: InputMaybe<Scalars['String']['input']>;
  runIDGTE?: InputMaybe<Scalars['String']['input']>;
  runIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  runIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  runIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  runIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  runIDLT?: InputMaybe<Scalars['String']['input']>;
  runIDLTE?: InputMaybe<Scalars['String']['input']>;
  runIDNEQ?: InputMaybe<Scalars['String']['input']>;
  runIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  runIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** sequential field predicates */
  sequential?: InputMaybe<Scalars['Boolean']['input']>;
  sequentialNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<TaskStatus>;
  statusIn?: InputMaybe<Array<TaskStatus>>;
  statusNEQ?: InputMaybe<TaskStatus>;
  statusNotIn?: InputMaybe<Array<TaskStatus>>;
  /** task_def_key field predicates */
  taskDefKey?: InputMaybe<Scalars['String']['input']>;
  taskDefKeyContains?: InputMaybe<Scalars['String']['input']>;
  taskDefKeyContainsFold?: InputMaybe<Scalars['String']['input']>;
  taskDefKeyEqualFold?: InputMaybe<Scalars['String']['input']>;
  taskDefKeyGT?: InputMaybe<Scalars['String']['input']>;
  taskDefKeyGTE?: InputMaybe<Scalars['String']['input']>;
  taskDefKeyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  taskDefKeyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  taskDefKeyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  taskDefKeyLT?: InputMaybe<Scalars['String']['input']>;
  taskDefKeyLTE?: InputMaybe<Scalars['String']['input']>;
  taskDefKeyNEQ?: InputMaybe<Scalars['String']['input']>;
  taskDefKeyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** tenant_id field predicates */
  tenantID?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDGTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  tenantIDLT?: InputMaybe<Scalars['Int']['input']>;
  tenantIDLTE?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  tenantIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** unfinished_count field predicates */
  unfinishedCount?: InputMaybe<Scalars['Int']['input']>;
  unfinishedCountGT?: InputMaybe<Scalars['Int']['input']>;
  unfinishedCountGTE?: InputMaybe<Scalars['Int']['input']>;
  unfinishedCountIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  unfinishedCountLT?: InputMaybe<Scalars['Int']['input']>;
  unfinishedCountLTE?: InputMaybe<Scalars['Int']['input']>;
  unfinishedCountNEQ?: InputMaybe<Scalars['Int']['input']>;
  unfinishedCountNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

/**
 * UpdateDeploymentInput is used for update Deployment object.
 * Input was generated by ent.
 */
export type UpdateDeploymentInput = {
  addDecisionReqIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProcDefIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  clearDecisionReqs?: InputMaybe<Scalars['Boolean']['input']>;
  clearName?: InputMaybe<Scalars['Boolean']['input']>;
  clearProcDefs?: InputMaybe<Scalars['Boolean']['input']>;
  clearSource?: InputMaybe<Scalars['Boolean']['input']>;
  /** 名称 */
  name?: InputMaybe<Scalars['String']['input']>;
  removeDecisionReqIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProcDefIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** 来源 */
  source?: InputMaybe<Scalars['String']['input']>;
};

/**
 * UpdateIdentityLinkInput is used for update IdentityLink object.
 * Input was generated by ent.
 */
export type UpdateIdentityLinkInput = {
  /** 分配人 */
  assignerID?: InputMaybe<Scalars['ID']['input']>;
  clearAssignerID?: InputMaybe<Scalars['Boolean']['input']>;
  clearComments?: InputMaybe<Scalars['Boolean']['input']>;
  clearGroupID?: InputMaybe<Scalars['Boolean']['input']>;
  clearUserID?: InputMaybe<Scalars['Boolean']['input']>;
  /** 评论 */
  comments?: InputMaybe<Scalars['String']['input']>;
  /** 组ID */
  groupID?: InputMaybe<Scalars['ID']['input']>;
  /** 分配,候选,参与,上级,抄送 */
  linkType?: InputMaybe<IdentityLinkLinkType>;
  /** 初始化,认领,删除,通过,驳回 */
  operationType?: InputMaybe<IdentityLinkOperationType>;
  taskID?: InputMaybe<Scalars['ID']['input']>;
  /** 用户ID */
  userID?: InputMaybe<Scalars['ID']['input']>;
};

export type VariableInput = {
  /** 变量名称 */
  name: Scalars['String']['input'];
  /** 变量类型 */
  type: Scalars['String']['input'];
  /** 变量值 */
  value: Scalars['String']['input'];
};

export type WorkflowRun = {
  __typename?: 'WorkflowRun';
  /** 工作流ID,可通过该ID对工作流进行操作,一般是业务的ID */
  id: Scalars['String']['output'];
  /** 工作流执行 */
  runID?: Maybe<Scalars['String']['output']>;
};

export type WorkflowRunInput = {
  /** 工作流ID,可通过该ID对工作流进行操作,一般是业务的ID */
  id: Scalars['String']['input'];
  /** 工作流执行 */
  runID?: InputMaybe<Scalars['String']['input']>;
};
